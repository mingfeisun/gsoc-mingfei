compositor_node PbsMaterialsRenderingNode
{
  // rt0 - original scene
	texture rt0 target_width target_height PF_R8G8B8
  // rt1 - texture to be passed to the next compositor node for
  // adding render pass effect. Note: it seems that a clear pass is not needed
  // for rt1
	texture rt1 target_width target_height PF_R8G8B8

	target rt0
	{

		pass clear
		{
			colour_value 0.0 0.0 0.0 1
		}

		pass render_scene
		{
			overlays	on
			shadows		PbsMaterialsShadowNode
		}
	}

  out 0 rt0
  out 1 rt1
}

compositor_node FinalComposition
{
  in 0 rt_output
  // Take input texture #1 and use the local name "rtN" for reference in this
  // scope. Note: A clear pass was removed from this target as it generated
  // image artifacts on some machines
  in 1 rtN

  target rt_output
  {
    pass render_quad
    {
      // Ignore the alpha channel
      material Ogre/Copy/4xFP32
      input 0 rtN
    }

    pass render_scene
    {
      lod_update_list off

      // Render Overlays
      overlays  on
      rq_first  254
      rq_last   255
    }
  }
}


abstract target cubemap_target_shadow
{
	pass clear { colour_value 1 1 1 1 }
	pass render_scene
	{
		camera_cubemap_reorient true
	}
}

compositor_node_shadow PbsMaterialsShadowNode
{
	technique pssm

	texture atlas 2048 7168 PF_D32_FLOAT no_fsaa
	texture tmpCubemap 1024 1024 PF_FLOAT32_R cubemap no_fsaa

	num_splits		3
	pssm_lambda		0.95
	shadow_map 0 atlas uv 0.0 0.000000000000000 1.0 0.285714285714286 light 0 split 0
	shadow_map 1 atlas uv 0.0 0.285714285714286 0.5 0.142857142857143 light 0 split 1
	shadow_map 2 atlas uv 0.5 0.285714285714286 0.5 0.142857142857143 light 0 split 2

	technique focused
	shadow_map 3 atlas uv 0.0 0.428571428571429 1.0 0.285714285714286 light 1
	shadow_map 4 atlas uv 0.0 0.714285714285714 1.0 0.285714285714286 light 2

	target atlas
	{
		pass clear
		{
			colour_value 1 1 1 1
		}
	}

	shadow_map_target_type directional
	{
		shadow_map 0 1 2
		{
			pass render_scene
			{
			}
		}
	}

	shadow_map_target_type directional spot
	{
		shadow_map 3 4
		{
			pass render_scene
			{
			}
		}
	}

	shadow_map_target_type point
	{
		shadow_map_repeat 3 4
		{
			target tmpCubemap +X : cubemap_target_shadow {}
			target tmpCubemap -X : cubemap_target_shadow {}
			target tmpCubemap +Y : cubemap_target_shadow {}
			target tmpCubemap -Y : cubemap_target_shadow {}
			target tmpCubemap +Z : cubemap_target_shadow {}
			target tmpCubemap -Z : cubemap_target_shadow {}

			shadow_map
			{
				pass render_quad
				{
					material Ogre/DPSM/CubeToDpsm
					input 0 tmpCubemap
				}
			}
		}
	}
}

workspace PbsMaterialsWorkspace
{
  connect_output FinalComposition 0
  connect PbsMaterialsRenderingNode 0 FinalComposition 1
}
